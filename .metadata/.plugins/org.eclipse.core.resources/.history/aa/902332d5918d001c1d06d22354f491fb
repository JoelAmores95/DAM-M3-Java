
public class Ejercicio03 {

	public static void main(String[] args) {
		int[][] tabla = {	{1,2,5,4,5},
				{2,4,8,6,4},
				{2,5,6,5,4},
				{2,5,4,5,2},
				{1,4,0,5,8}		};

	}

	// Función 1: sumarVecinos

	/**
	 * Dada una celda (numFila y numCol), calcula la suma de sus adyacentes
	 * @param matriz
	 * @param numFil
	 * @param numCol
	 * @return int
	 */

	public static int sumarVecinos(int matriz[][], int numFil, int numCol) {
		int suma = 0;

		// Lo divido en 8 posibilidades, siempre que esté dentro de límites

		// Opción 1 fil + 1
		if(matriz[numFil + 1][numCol] < matriz.length) {
			suma += matriz[numFil + 1][numCol];
		}

		// Opción 2 fil - 1
		if(matriz[numFil - 1][numCol] >= 0) {
			suma += matriz[numFil - 1][numCol];
		}

		// Opción 3 col - 1
		if(matriz[numFil][numCol - 1] >= 0) {
			suma += matriz[numFil][numCol - 1];
		}

		//Opción 4 col + 1
		if(matriz[numFil][numCol + 1] < matriz[numFil].length) {
			suma += matriz[numFil][numCol + 1];
		}

		// Opción 5 col + 1 fil -1
		if(matriz[numFil-1][numCol + 1] < matriz[numFil].length && matriz[numFil-1][numCol + 1] >= 0) {
			suma += matriz[numFil - 1][numCol + 1];
		}
		
		// Opción 6 col - 1 fil -1
		if(matriz[numFil-1][numCol - 1] >=0) {
			suma += matriz[numFil - 1][numCol - 1];
		}
		
		// Opción 7 col + 1 fil +1
		if(matriz[numFil+1][numCol + 1] < matriz[numFil].length && matriz[numFil+1][numCol + 1] < matriz.length) {
			suma += matriz[numFil + 1][numCol + 1];
		}
		
		// Opción 8 col -1 fil +1
		if(matriz[numFil+1][numCol - 1] < matriz.length && matriz[numFil+1][numCol - 1] >= 0) {
			suma += matriz[numFil + 1][numCol - 1];
		}
		
		return suma;
	}

}
